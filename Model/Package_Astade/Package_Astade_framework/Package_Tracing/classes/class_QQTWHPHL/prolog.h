#ifdef _TRACE_

#  define RETURN(VAL) return NOTIFY_FUNCTION_CALL_Helper.setRetval(VAL);
#  define NOTIFY_FUNCTION_CALL(ID,LEVEL,CLASS,FUNCTION,PARAMETER,RETURN) Trace2UML NOTIFY_FUNCTION_CALL_Helper(1,LEVEL,ID,CLASS,PARAMETER,FUNCTION);
#  define NOTIFY_CONSTRUCTOR(LEVEL,CLASS,PARAMETER) Trace2UML NOTIFY_FUNCTION_CALL_Helper(0,LEVEL,this,CLASS,PARAMETER);
#  define NOTIFY_DESTRUCTOR(LEVEL,CLASS) Trace2UML NOTIFY_FUNCTION_CALL_Helper(2,LEVEL,this,CLASS);

#else

#  define RETURN(VAL) return(VAL);
#  define NOTIFY_FUNCTION_CALL(ID,LEVEL,CLASS,FUNCTION,PARAMETER,RETURN);
#  define NOTIFY_CONSTRUCTOR(LEVEL,CLASS,PARAMETER);
#  define NOTIFY_DESTRUCTOR(LEVEL,CLASS);

#endif

#include <fstream>
#include <iostream>
#include <istream>
#include <map>
#include <semaphore.h>