Please number the bugs and issues, and mark the next free number below!

Known bugs:

1. Copy configurations end up with wrong folder names for the copied config.
2. If you add a prolog or epilog, the tree is not updated correctly
3. If you remove from active component, the source is not deleted in "auto"
4. If accidentially parts of a model are not under source-control while the rest
   of the model is, interesting errors may occur
5. The state-chart coders ignore prologues and epilogues (also component-level)
6. the ResourceEdit allows to make a static operation const (the compiler does
   not)
7. -

Issues:

1. A relation attribute cannot be marked as deprecated, yet.
2. AstadeFrame::CopyMakefile performs some action that should be done by the API
3. "Run" should not block the tree
4. It should be possible to interrupt the build
5. copy and paste has to be checked for all elements.
6. There should be a "search in model" function
7. There should be the possibility to convert an attribute to a relation and
   vice versa.
8. The coder should not change the filedate of the headerfiles,
   if the new content is the same as before. This would increase compile speed!
10. -

Features/Proposals:

1. Using an enum defined within the namespace of a class for return values
	of operations own leads to the need to full qualify the return type
	with the class name.
	Example: ClassC::Type_t GetAnError()
	Changing the class name afterwards leads to a mass of operations that
	have to be changed.
	Solution: Use a macro e.g. %classname% substituted by the coder.
2. Interface Classes: C++ pure abstract class, Java knows special interfaces
3. Implements-Relation: clearly show in UML that a class implements an interface
   (see above)
   (perhaps Astade can auto-generate abstract operations from base classes and
   interfaces on demand)
4. Template Classes: in C++ template class, in Java generic class, aso.
5. -
