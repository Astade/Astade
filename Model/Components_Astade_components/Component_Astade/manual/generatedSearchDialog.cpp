// -*- C++ -*-
//
// generated by wxGlade 0.6.8 on Sun Jan  3 22:19:00 2016
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "generatedSearchDialog.h"

// begin wxGlade: ::extracode
// end wxGlade


generatedSearchDialog::generatedSearchDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER)
{
    // begin wxGlade: generatedSearchDialog::generatedSearchDialog
    sizer_12_staticbox = new wxStaticBox(this, wxID_ANY, _("Looking for"));
    sizer_13_staticbox = new wxStaticBox(this, wxID_ANY, _("Fields to search in"));
    sizer_6_staticbox = new wxStaticBox(this, wxID_ANY, _("Options"));
    searchTextLabel = new wxStaticText(this, wxID_ANY, _("Text to find:"));
    const wxString *TextToFind_choices = NULL;
    TextToFind = new wxComboBox(this, ID_TextToFind, wxT(""), wxDefaultPosition, wxDefaultSize, 0, TextToFind_choices, wxCB_DROPDOWN);
    OptionCaseSensitive = new wxCheckBox(this, ID_OptionCaseSensitive, _("Case sensitive"));
    OptionWholeWordsOnly = new wxCheckBox(this, ID_OptionWholeWordsOnly, _("Whole words only"));
    OptionRegularExpression = new wxCheckBox(this, ID_OptionRegularExpression, _("Regular expression"));
    OptionActiveComponentOnly = new wxCheckBox(this, ID_OptionActiveComponentOnly, _("active component only"));
    LookingForComponent = new wxCheckBox(this, ID_LookingForComponent, _("Component"));
    LookingForUserCode = new wxCheckBox(this, ID_LookingForUserCode, _("User code"));
    LookingForClass = new wxCheckBox(this, ID_LookingForClass, _("Class"));
    LookingForAttribute = new wxCheckBox(this, ID_LookingForAttribute, _("Attribute or Relation"));
    LookingForOperation = new wxCheckBox(this, ID_LookingForOperation, _("Operation"));
    LookingForParameter = new wxCheckBox(this, ID_LookingForParameter, _("Parameter"));
    LookingForType = new wxCheckBox(this, ID_LookingForType, _("Type"));
    LookingForState = new wxCheckBox(this, ID_LookingForState, _("State"));
    placeholder = new wxStaticText(this, wxID_ANY, wxEmptyString);
    LookingForAll = new wxCheckBox(this, ID_LookingForAll, _("all of them"));
    FieldsToSearchName = new wxCheckBox(this, ID_FieldsToSearchName, _("Name"));
    FieldsToSearchType = new wxCheckBox(this, ID_FieldsToSearchType, _("Type"));
    FieldsToSearchDefault = new wxCheckBox(this, ID_FieldsToSearchDefault, _("Default"));
    FieldsToSearchUserCode = new wxCheckBox(this, ID_FieldsToSearchUserCode, _("User code"));
    FieldsToSearchDescription = new wxCheckBox(this, ID_FieldsToSearchDescription, _("Description"));
    FieldsToSearchAll = new wxCheckBox(this, ID_FieldsToSearchAll, _("all of them"));
    cancel = new wxButton(this, ID_Cancel, _("Cancel"));
    StartSearch = new wxButton(this, ID_StartSearch, _("start search"));

    set_properties();
    do_layout();
    // end wxGlade
}


void generatedSearchDialog::set_properties()
{
    // begin wxGlade: generatedSearchDialog::set_properties
    SetTitle(_("search"));
    TextToFind->SetFocus();
    OptionActiveComponentOnly->SetValue(1);
    LookingForComponent->Enable(0);
    LookingForUserCode->Enable(0);
    LookingForClass->Enable(0);
    LookingForAttribute->Enable(0);
    LookingForOperation->Enable(0);
    LookingForParameter->Enable(0);
    LookingForType->Enable(0);
    LookingForState->Enable(0);
    LookingForAll->SetValue(1);
    FieldsToSearchName->Enable(0);
    FieldsToSearchType->Enable(0);
    FieldsToSearchDefault->Enable(0);
    FieldsToSearchUserCode->Enable(0);
    FieldsToSearchDescription->Enable(0);
    FieldsToSearchAll->SetValue(1);
    // end wxGlade
}


void generatedSearchDialog::do_layout()
{
    // begin wxGlade: generatedSearchDialog::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_11 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_8 = new wxBoxSizer(wxHORIZONTAL);
    sizer_13_staticbox->Lower();
    wxStaticBoxSizer* sizer_13 = new wxStaticBoxSizer(sizer_13_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_14 = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_2 = new wxFlexGridSizer(4, 2, 5, 20);
    sizer_12_staticbox->Lower();
    wxStaticBoxSizer* sizer_12 = new wxStaticBoxSizer(sizer_12_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_1 = new wxFlexGridSizer(5, 2, 5, 5);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxVERTICAL);
    sizer_6_staticbox->Lower();
    wxStaticBoxSizer* sizer_6 = new wxStaticBoxSizer(sizer_6_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_9 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxHORIZONTAL);
    sizer_3->Add(searchTextLabel, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 5);
    sizer_3->Add(TextToFind, 1, wxEXPAND, 0);
    sizer_1->Add(sizer_3, 0, wxALL|wxEXPAND, 5);
    sizer_9->Add(OptionCaseSensitive, 0, wxALL, 5);
    sizer_9->Add(OptionWholeWordsOnly, 0, wxALL, 5);
    sizer_9->Add(OptionRegularExpression, 0, wxALL, 5);
    sizer_9->Add(OptionActiveComponentOnly, 0, wxALL, 5);
    sizer_6->Add(sizer_9, 0, wxEXPAND, 0);
    sizer_5->Add(sizer_6, 0, wxEXPAND, 0);
    sizer_4->Add(sizer_5, 0, wxEXPAND, 0);
    grid_sizer_1->Add(LookingForComponent, 0, 0, 0);
    grid_sizer_1->Add(LookingForUserCode, 0, 0, 0);
    grid_sizer_1->Add(LookingForClass, 0, 0, 0);
    grid_sizer_1->Add(LookingForAttribute, 0, 0, 0);
    grid_sizer_1->Add(LookingForOperation, 0, 0, 0);
    grid_sizer_1->Add(LookingForParameter, 0, 0, 0);
    grid_sizer_1->Add(LookingForType, 0, 0, 0);
    grid_sizer_1->Add(LookingForState, 0, 0, 0);
    grid_sizer_1->Add(placeholder, 0, 0, 0);
    grid_sizer_1->Add(LookingForAll, 0, 0, 0);
    sizer_12->Add(grid_sizer_1, 0, wxEXPAND, 0);
    sizer_11->Add(sizer_12, 0, wxEXPAND, 0);
    grid_sizer_2->Add(FieldsToSearchName, 0, 0, 0);
    grid_sizer_2->Add(FieldsToSearchType, 0, 0, 0);
    grid_sizer_2->Add(FieldsToSearchDefault, 0, 0, 0);
    grid_sizer_2->Add(FieldsToSearchUserCode, 0, 0, 0);
    grid_sizer_2->Add(FieldsToSearchDescription, 0, 0, 0);
    grid_sizer_2->Add(FieldsToSearchAll, 0, 0, 0);
    sizer_14->Add(grid_sizer_2, 0, wxEXPAND, 0);
    sizer_13->Add(sizer_14, 0, wxEXPAND, 0);
    sizer_11->Add(sizer_13, 0, wxTOP|wxEXPAND, 5);
    sizer_8->Add(cancel, 0, wxTOP, 5);
    sizer_8->Add(20, 20, 1, 0, 0);
    sizer_8->Add(StartSearch, 0, wxTOP|wxBOTTOM, 5);
    sizer_11->Add(sizer_8, 1, wxEXPAND, 0);
    sizer_4->Add(sizer_11, 0, wxLEFT|wxRIGHT|wxEXPAND, 5);
    sizer_2->Add(sizer_4, 0, wxEXPAND, 0);
    sizer_1->Add(sizer_2, 0, wxLEFT|wxEXPAND, 5);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    Layout();
    // end wxGlade
}

