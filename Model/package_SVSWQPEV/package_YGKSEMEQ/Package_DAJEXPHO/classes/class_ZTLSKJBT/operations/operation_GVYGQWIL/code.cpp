wxCmdLineParser CmdLineParser(argc, const_cast<char**>(argv));
CmdLineParser.AddParam("DIRNAME",wxCMD_LINE_VAL_STRING,wxCMD_LINE_OPTION_MANDATORY);
CmdLineParser.AddParam("TARGETFILE",wxCMD_LINE_VAL_STRING,wxCMD_LINE_OPTION_MANDATORY);

CmdLineParser.SetLogo("StatChartCoder: the \"Statchart coder\"\n" COPYRIGHT);

if (CmdLineParser.Parse() == 0)
{
	if (CmdLineParser.GetParamCount()==2)
	{
		AdeStatechart theElement(CmdLineParser.GetParam(0));

		if ((theElement.GetType() & ITEM_TYPE_MASK) != ITEM_IS_STATECHART)
		{
			printf("Error: only state charts please!");
			return EXIT_FAILURE;
		}

		wxDateTime now;
		now.SetToCurrent();
		now.MakeTimezone(wxDateTime::UTC);
		wxString GenerationTime = now.FormatISODate() + " " + now.FormatISOTime() + " UTC";

        wxFileName theFileName = CmdLineParser.GetParam(1);
	    theFileName.SetExt("cpp");
	    implementationFile = fopen(theFileName.GetFullPath().c_str(),"w");

	    fprintf(implementationFile, "/*********************************************************/\n");
	    fprintf(implementationFile, "/* this code was generated by the Astade StateChartCoder */\n");
	    fprintf(implementationFile, "/**\n");
	    fprintf(implementationFile, " *   @date %s\n", (const char*)GenerationTime.c_str());
	    fprintf(implementationFile, " *   @file %s\n", (const char*)theFileName.GetFullName().c_str());
	    fprintf(implementationFile, " *********************************************************/\n\n");

	    theFileName.SetExt("h");
	    specificationFile = fopen(theFileName.GetFullPath().c_str(),"w");

	    fprintf(specificationFile, "/*********************************************************/\n");
	    fprintf(specificationFile, "/* this code was generated by the Astade StateChartCoder */\n");
	    fprintf(specificationFile, "/**\n");
	    fprintf(specificationFile, " *   @date %s\n", (const char*)GenerationTime.c_str());
	    fprintf(specificationFile, " *   @file %s\n", (const char*)theFileName.GetFullName().c_str());
	    fprintf(specificationFile, " *********************************************************/\n\n");

		CodeStatechart(theElement);

	    fclose(implementationFile);
	    fclose(specificationFile);

		return EXIT_SUCCESS;
	}
	else
		return EXIT_FAILURE;
}

return EXIT_FAILURE;
