/* vi: set tabstop=4: */

target.SetExt("cpp");
std::ofstream out(target.GetFullPath());

wxFileName PrefixName(myAdeComponent->GetFileName());
PrefixName.SetFullName("prolog.cpp");
wxTextFile Gprefixtext(PrefixName.GetFullPath());
if (Gprefixtext.Exists())
	Gprefixtext.Open();
if (Gprefixtext.IsOpened() && Gprefixtext.GetLineCount() > 0)
{
	wxString str;
	for (str = Gprefixtext.GetFirstLine(); !Gprefixtext.Eof(); str = Gprefixtext.GetNextLine())
		out << str << std::endl;
	if (!str.empty())
		out << str << std::endl;
	out << std::endl;
}

out << "/******************************************************/" << std::endl;
out << "/* this code was generated by the Astade CppGenerator */" << std::endl;
out << "/** " << source->GetDescription()   << std::endl;
out << " *  @date " << GenerationTime       << std::endl;
out << " *  @file " << target.GetFullName() << std::endl;
out << " ******************************************************/" << std::endl;
out << std::endl;

PrefixName = source->GetFileName();
PrefixName.SetFullName("prolog.cpp");
wxTextFile prefixtext(PrefixName.GetFullPath());
PrefixName.MakeRelativeTo(wxFileName::GetCwd());

if (prefixtext.Exists())
	prefixtext.Open();
if (prefixtext.IsOpened() && prefixtext.GetLineCount() > 0)
{
	wxString str;
	out << "//****** implementation prolog ******" << std::endl;
	out << "//[" << PrefixName.GetFullPath() << "]" << std::endl;
	for (str = prefixtext.GetFirstLine(); !prefixtext.Eof(); str = prefixtext.GetNextLine())
		out << str << std::endl;
	if (!str.empty())
		out << str << std::endl;
	out << "//[EOF]" << std::endl;
	out << "//***********************************" << std::endl;
	out << std::endl;
}

target.SetExt("h");
out << "#include \"" << target.GetFullName();
out << "\"\t // own header" << std::endl;
out << std::endl;

RelationIncludes(out, false, NULL);
staticAttribute(out, false, ITEM_IS_PUBLIC);
staticAttribute(out, false, ITEM_IS_PROTECTED);
staticAttribute(out, false, ITEM_IS_PRIVATE);
operations(out, false, false, ITEM_IS_PUBLIC);
operations(out, false, false, ITEM_IS_PROTECTED);
operations(out, false, false, ITEM_IS_PRIVATE);

wxFileName PostfixName(source->GetFileName());
PostfixName.SetFullName("epilog.cpp");
wxTextFile postfixtext(PostfixName.GetFullPath());
PostfixName.MakeRelativeTo(wxFileName::GetCwd());

if (postfixtext.Exists())
	postfixtext.Open();
if (postfixtext.IsOpened() && postfixtext.GetLineCount() > 0)
{
	out << "//****** implementation epilog ******" << std::endl;
	out << "//[" << PostfixName.GetFullPath() << "]" << std::endl;
	wxString str;
	for (str = postfixtext.GetFirstLine(); !postfixtext.Eof(); str = postfixtext.GetNextLine())
		out << str << std::endl;
	if (!str.empty())
		out << str << std::endl;
	out << "//[EOF]" << std::endl;
	out << "//***********************************" << std::endl;
}

PostfixName = myAdeComponent->GetFileName();
PostfixName.SetFullName("epilog.cpp");
wxTextFile Gpostfixtext(PostfixName.GetFullPath());
if (Gpostfixtext.Exists())
	Gpostfixtext.Open();
if (Gpostfixtext.IsOpened() && Gpostfixtext.GetLineCount() > 0)
{
	out << std::endl;
	wxString str;
	for (str = Gpostfixtext.GetFirstLine(); !Gpostfixtext.Eof(); str = Gpostfixtext.GetNextLine())
		out << str << std::endl;
	if (!str.empty())
		out << str << std::endl;
}
