FILE* f;
target.SetExt("h");
f = fopen(target.GetFullPath().c_str(),"w");
fprintf(f,"//******************************************************\n");
fprintf(f,"//** Code generated by the Astade CppGenerator        **\n");
fprintf(f,"//** Filename: %-39s**\n",target.GetFullName().c_str());
fprintf(f,"//******************************************************\n\n");
 
wxString defname(target.GetFullName());
defname.MakeUpper();
defname.Replace(".","_");

fprintf(f,"#ifndef %s\n",defname.c_str());
fprintf(f,"#define %s\n\n",defname.c_str());

wxFileName PrefixName(source->GetFileName());
PrefixName.SetFullName("prolog.h");
wxTextFile prefixtext(PrefixName.GetFullPath());

if (prefixtext.Exists())
    prefixtext.Open();

if (prefixtext.IsOpened() )
{
    fprintf(f,"//****** specification prolog ******\n");
    wxString str;
    for ( str = prefixtext.GetFirstLine(); !prefixtext.Eof(); str = prefixtext.GetNextLine() )
    {
        fprintf(f,"%s\n",str.c_str());
    }
    if (str.size())
        fprintf(f,"%s\n",str.c_str());
    fprintf(f,"//**********************************\n");
}

wxString BaseClasses;
RelationIncludes(f, true, &BaseClasses);

if (!source->GetAdditionalBaseClasses().empty())
{
    if (!BaseClasses.empty())
        BaseClasses = source->GetAdditionalBaseClasses() + ", " + BaseClasses;
    else
        BaseClasses = source->GetAdditionalBaseClasses();
}
fprintf(f,"class %s",source->GetName().c_str());
if (!BaseClasses.empty())
    fprintf(f," : %s",BaseClasses.c_str());
fprintf(f,"\n{\n");
 
fprintf(f,"\tpublic:\n");
staticAttribute(f,true,ITEM_IS_PUBLIC);
memberType(f);
memberAttribute(f,true,ITEM_IS_PUBLIC);
operations(f,true,ITEM_IS_PUBLIC);

fprintf(f,"\n\tprotected:\n");
staticAttribute(f,true,ITEM_IS_PROTECTED);
memberAttribute(f,true,ITEM_IS_PROTECTED);

std::map<wxString,wxString>::iterator it;

for (it = RelationTypes.begin(); it != RelationTypes.end(); ++it)
{
    fprintf(f,"\t%s\t%s;\n",(*it).second.c_str(),(*it).first.c_str());
}
operations(f,true,ITEM_IS_PROTECTED);

fprintf(f,"\n\tprivate:\n");
staticAttribute(f,true,ITEM_IS_PRIVATE);
memberAttribute(f,true,ITEM_IS_PRIVATE);
operations(f,true,ITEM_IS_PRIVATE);

fprintf(f,"};\n\n");

wxFileName PostfixName(source->GetFileName());
PostfixName.SetFullName("epilog.h");
wxTextFile postfixtext(PostfixName.GetFullPath());

if (postfixtext.Exists())
    postfixtext.Open();

if (postfixtext.IsOpened())
{
    fprintf(f,"//****** specification epilog ******\n");
    wxString str;
    for (str = postfixtext.GetFirstLine(); !postfixtext.Eof(); str = postfixtext.GetNextLine())
    {
        fprintf(f,"%s\n",str.c_str());
    }
    if (str.size())
        fprintf(f,"%s\n",str.c_str());
    fprintf(f,"//**********************************\n");
}

fprintf(f,"#endif\n");
fclose(f);
