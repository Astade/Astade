/******************************************************/
/* this code was generated by the Astade CppGenerator */
/** 
 *  @date 2008-05-21 11:59:48 UTC
 *  @file CApp.cpp
 ******************************************************/

//****** implementation prolog ******
//[Package_APERROVC\classes\class_XJYTESIM\prolog.cpp]
using namespace std;
//[EOF]
//***********************************

#include "CApp.h"	 // own header

// Relation includes:
#include "stdio.h"
#include <tclap/CmdLine.h>


//****** Trace Macros ***************
#ifndef NOTIFY_CONSTRUCTOR
#  define NOTIFY_CONSTRUCTOR(a,b,c)
#endif
#ifndef NOTIFY_DESTRUCTOR
#  define NOTIFY_DESTRUCTOR(a,b)
#endif
#ifndef NOTIFY_FUNCTION_CALL
#  define NOTIFY_FUNCTION_CALL(a,b,c,d,e)
#endif
#ifndef NOTIFY_RETURN_VALUE
#  define NOTIFY_RETURN_VALUE(a)
#endif

//****** implementation epilog ******
//[Package_APERROVC\classes\class_XJYTESIM\epilog.cpp]
int main(int argc, char** argv)
{
	int retVal = 0;

	try {
		TCLAP::CmdLine cmd("Astade CommandLine Application", ' ', "1.0");

		TCLAP::SwitchArg testSwitch("t", "test", "Test");
		cmd.add(testSwitch);

		cmd.parse( argc, argv );

		if(testSwitch.getValue())
		{
			cout << "You have used the command line switch '-t, --test' for testing." << endl;
		}
		else
		{
			cmd.getOutput()->usage(cmd);
		}

	} catch(TCLAP::ArgException &e) {
		cerr << "An error occured while parsing the command line." << endl
				  << "Error: '" << e.error() << "'" << endl
				  << "for '" << e.argId() << "'" << endl;
		retVal = -1;
	}

	return 0;
};
//[EOF]
//***********************************
