//******************************************************
//** Code generated by the Astade CppGenerator
//** Date:     2006-03-03 12:29:20 UTC
//** Filename: SeqDataBase.h
//******************************************************

#ifndef __SEQDATABASE_H
  #define __SEQDATABASE_H

//****** specification prolog ******
//[/Users/stefan/Developer/Astade-UML/trace2uml/Model/Package_LEOIFVGO/classes/class_ISQIUIGR/prolog.h]
#include <wx/arrstr.h>
#include <vector>
#include <list>
#include <wx/tokenzr.h>

#define MAXCLASSCOUNT 32
//[EOF]
//**********************************

// Relation includes:
#include "SeqEvent.h"

class SeqDataBase
{
public:
	const int	UPPER_BORDER;
	SeqDataBase();
	int GetClassMiddle(int classIndex);
	int GetGraphWidth();
	int GetClassBoxWidth(int classIndex);
	wxString GetClassName(int classIndex);
	int GetUpperBorder();
	int GetTimeFromY(int y);
	wxString GetEventTimestamp(int eventNumber);
	int GetSourceIndex(int eventNumber);
	int GetClassWidth(int classIndex);
	int GetObjectIDFromX(int x);
	wxString GetLabel(int eventNumber);
	void SetClassBoxWidth(int classIndex,int width);
	int GetClassBoxHight();
	int GetLowerBorder();
	void DeleteEvent(int eventNumber);
	int GetTime2Y(int time);
	void Clear();
	int GetClassCount();
	int GetLeftBorder();
	void AddLine(wxString theLine);
	int GetEventsCount();
	int GetDestinationIndex(int eventNumber);
	int GetGraphHight();
	int GetEventID(int eventNumber);
	int GetRightBorder();
	wxString GetEventText(int eventNumber);

protected:
	std::vector<SeqEvent>	itsEvents;

private:
	std::vector<int>	classCenter;
	std::vector<int>	classWidth;
	wxArrayString	classes;
	std::vector<std::list<int> >	eventQueue;
	unsigned	longestObjectName;
	unsigned	longestTimeStamp;
	void AddEventCall(int object1,int object2,const wxString& label,const wxString& timeStamp);
	int AddObject(const wxString& object);
	void AddEventSend(int object1,int object2,const wxString& label,const wxString& timeStamp);
	void AddEventReceive(int object1,int object2,const wxString& label,const wxString& timeStamp);
	void AddEventReturn(int object1,int object2,const wxString& label,const wxString& timeStamp);
	void AddEventCreate(int object1,int object2,const wxString& timeStamp);
	int EnsureObject(const wxString& object);
	void AddEventStateChange(int object1,const wxString& label,const wxString& timeStamp);
	void AddEventComment(const wxString& string);
	void AddEventExist(int object1);
	void AddEventDelete(int object1,int object2,wxString timeStamp);
};

#endif
